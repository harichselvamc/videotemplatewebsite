name: Upload Meme Video and Update Database

on:
  push:
    paths:
      - '.github/tmp/pending_upload.json'

jobs:
  process-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Decode pending_upload.json and save video
        run: |
          TITLE=$(jq -r '.title' .github/tmp/pending_upload.json | tr ' ' '_' | tr -cd '[:alnum:]_')
          FILE="videos/${TITLE}.mp4"
          jq -r '.videoBase64' .github/tmp/pending_upload.json | base64 -d > "$FILE"

          MOVIE=$(jq -r '.meta.movie' .github/tmp/pending_upload.json)
          HERO=$(jq -r '.meta.hero' .github/tmp/pending_upload.json)
          YEAR=$(jq -r '.meta.year' .github/tmp/pending_upload.json)
          LANG=$(jq -r '.meta.language' .github/tmp/pending_upload.json)

          echo "{
            \"title\": \"${TITLE//_/ }\",
            \"movie\": \"$MOVIE\",
            \"hero\": \"$HERO\",
            \"year\": $YEAR,
            \"language\": \"$LANG\",
            \"videoUrl\": \"$FILE\"
          }" > .github/tmp/new_entry.json

      - name: Update data.json
        run: |
          if [ ! -f data.json ]; then echo "[]" > data.json; fi
          jq -s '.[0] + [.[1]]' data.json .github/tmp/new_entry.json > tmp.json && mv tmp.json data.json

      - name: Commit and push
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "GitHub Action Bot"
          git config user.email "action@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git add videos/*.mp4 data.json
          git commit -m "ðŸ“¦ Add new video and update database"
          git push origin main
